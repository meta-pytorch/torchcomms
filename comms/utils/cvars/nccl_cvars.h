// Copyright (c) Meta Platforms, Inc. and affiliates.
// @generated SignedSource<<9faa9aa79e5e364340862b443258445f2a79d5fb>>
// Automatically generated by ./comms/utils/cvars/extractcvars.py --- START
// DO NOT EDIT!!!

#ifndef NCCL_CVARS_H_INCLUDED
#define NCCL_CVARS_H_INCLUDED

#include <cstdint>
#include <string>
#include <unordered_map>
#include <vector>

extern bool CUDA_LAUNCH_BLOCKING;
extern bool CUDA_LAUNCH_BLOCKING_DEFAULT;

extern std::string NCCL_ALGO;
extern std::string NCCL_ALGO_DEFAULT;

enum class NCCL_ALLGATHER_ALGO {
  orig,
  ctran,
  ctdirect,
  ctring,
  ctrd,
  ctbrucks,
};
extern enum NCCL_ALLGATHER_ALGO NCCL_ALLGATHER_ALGO;
extern enum NCCL_ALLGATHER_ALGO NCCL_ALLGATHER_ALGO_DEFAULT;

enum class NCCL_ALLGATHER_P_ALGO {
  ctdirect,
  ctpipeline,
};
extern enum NCCL_ALLGATHER_P_ALGO NCCL_ALLGATHER_P_ALGO;
extern enum NCCL_ALLGATHER_P_ALGO NCCL_ALLGATHER_P_ALGO_DEFAULT;

extern int64_t NCCL_ALLOC_P2P_NET_LL_BUFFERS;
extern int64_t NCCL_ALLOC_P2P_NET_LL_BUFFERS_DEFAULT;

enum class NCCL_ALLREDUCE_ALGO {
  orig,
  dda,
  ctran,
  ctdirect,
  ctarg,
  ctring,
  ctmring,
};
extern enum NCCL_ALLREDUCE_ALGO NCCL_ALLREDUCE_ALGO;
extern enum NCCL_ALLREDUCE_ALGO NCCL_ALLREDUCE_ALGO_DEFAULT;

enum class NCCL_ALLREDUCE_TYPE {
  orig,
  ncclFloat32,
};
extern enum NCCL_ALLREDUCE_TYPE NCCL_ALLREDUCE_TYPE;
extern enum NCCL_ALLREDUCE_TYPE NCCL_ALLREDUCE_TYPE_DEFAULT;

enum class NCCL_ALLTOALLV_ALGO {
  orig,
  ctran,
  compCtran,
  bsCompCtran,
};
extern enum NCCL_ALLTOALLV_ALGO NCCL_ALLTOALLV_ALGO;
extern enum NCCL_ALLTOALLV_ALGO NCCL_ALLTOALLV_ALGO_DEFAULT;

enum class NCCL_ALLTOALL_ALGO {
  orig,
  ctran,
};
extern enum NCCL_ALLTOALL_ALGO NCCL_ALLTOALL_ALGO;
extern enum NCCL_ALLTOALL_ALGO NCCL_ALLTOALL_ALGO_DEFAULT;

extern int NCCL_ALL_REDUCE_SPARSE_BLOCK_NUM_THREAD_BLOCKS;
extern int NCCL_ALL_REDUCE_SPARSE_BLOCK_NUM_THREAD_BLOCKS_DEFAULT;

extern int NCCL_ALL_REDUCE_SPARSE_BLOCK_THREAD_BLOCK_SIZE;
extern int NCCL_ALL_REDUCE_SPARSE_BLOCK_THREAD_BLOCK_SIZE_DEFAULT;

enum class NCCL_BROADCAST_ALGO {
  orig,
  ctran,
  ctdirect,
  ctbtree,
};
extern enum NCCL_BROADCAST_ALGO NCCL_BROADCAST_ALGO;
extern enum NCCL_BROADCAST_ALGO NCCL_BROADCAST_ALGO_DEFAULT;

extern int64_t NCCL_BUFFSIZE;
extern int64_t NCCL_BUFFSIZE_DEFAULT;

extern int NCCL_CGA_CLUSTER_SIZE;
extern int NCCL_CGA_CLUSTER_SIZE_DEFAULT;

enum class NCCL_CHANNEL_METADATA_LOCATION {
  unset,
  host,
  device,
};
extern enum NCCL_CHANNEL_METADATA_LOCATION NCCL_CHANNEL_METADATA_LOCATION;
extern enum NCCL_CHANNEL_METADATA_LOCATION
    NCCL_CHANNEL_METADATA_LOCATION_DEFAULT;

extern int64_t NCCL_CHECK_POINTERS;
extern int64_t NCCL_CHECK_POINTERS_DEFAULT;

extern int64_t NCCL_CHUNK_SIZE;
extern int64_t NCCL_CHUNK_SIZE_DEFAULT;

extern std::string NCCL_CLIENT_SOCKET_IFNAME;
extern std::string NCCL_CLIENT_SOCKET_IFNAME_DEFAULT;

extern int NCCL_COLLNET_ENABLE;
extern int NCCL_COLLNET_ENABLE_DEFAULT;

extern int64_t NCCL_COLLNET_NODE_THRESHOLD;
extern int64_t NCCL_COLLNET_NODE_THRESHOLD_DEFAULT;

extern int NCCL_COLLSTAT_REPORT_INTERVAL;
extern int NCCL_COLLSTAT_REPORT_INTERVAL_DEFAULT;

extern std::vector<std::string> NCCL_COLLTRACE;
extern std::vector<std::string> NCCL_COLLTRACE_DEFAULT;

extern int64_t NCCL_COLLTRACE_CHECK_INTERVAL_MS;
extern int64_t NCCL_COLLTRACE_CHECK_INTERVAL_MS_DEFAULT;

extern bool NCCL_COLLTRACE_CTRAN_USE_CPU_RECORD;
extern bool NCCL_COLLTRACE_CTRAN_USE_CPU_RECORD_DEFAULT;

extern bool NCCL_COLLTRACE_EVENT_BLOCKING_SYNC;
extern bool NCCL_COLLTRACE_EVENT_BLOCKING_SYNC_DEFAULT;

extern int NCCL_COLLTRACE_PENDING_QUEUE_SIZE;
extern int NCCL_COLLTRACE_PENDING_QUEUE_SIZE_DEFAULT;

extern int NCCL_COLLTRACE_RECORD_MAX;
extern int NCCL_COLLTRACE_RECORD_MAX_DEFAULT;

extern int NCCL_COLLTRACE_RECORD_MAX_ITERATIONS;
extern int NCCL_COLLTRACE_RECORD_MAX_ITERATIONS_DEFAULT;

extern int64_t NCCL_COLLTRACE_REPORT_FIRST_N_COLL;
extern int64_t NCCL_COLLTRACE_REPORT_FIRST_N_COLL_DEFAULT;

extern int NCCL_COLLTRACE_REPORT_INTERVAL_SEC;
extern int NCCL_COLLTRACE_REPORT_INTERVAL_SEC_DEFAULT;

extern std::vector<std::string> NCCL_COLLTRACE_SLOW_COLL_THRESHOLD_BY_PG;
extern std::vector<std::string>
    NCCL_COLLTRACE_SLOW_COLL_THRESHOLD_BY_PG_DEFAULT;

extern bool NCCL_COLLTRACE_TRACE_CUDA_GRAPH;
extern bool NCCL_COLLTRACE_TRACE_CUDA_GRAPH_DEFAULT;

extern bool NCCL_COLLTRACE_USE_NEW_COLLTRACE;
extern bool NCCL_COLLTRACE_USE_NEW_COLLTRACE_DEFAULT;

extern int64_t NCCL_COLLTRACE_WAKEUP_INTERVAL_MS;
extern int64_t NCCL_COLLTRACE_WAKEUP_INTERVAL_MS_DEFAULT;

extern int64_t NCCL_COLLTRACE_WATCHDOG_DEFAULT_TIMEOUT_SEC;
extern int64_t NCCL_COLLTRACE_WATCHDOG_DEFAULT_TIMEOUT_SEC_DEFAULT;

extern std::string NCCL_COLL_EVENT_LOGGING;
extern std::string NCCL_COLL_EVENT_LOGGING_DEFAULT;

extern std::string NCCL_COLL_STATS_LOGGING;
extern std::string NCCL_COLL_STATS_LOGGING_DEFAULT;

extern bool NCCL_COMMSMONITOR_ENABLE;
extern bool NCCL_COMMSMONITOR_ENABLE_DEFAULT;

extern std::vector<std::string> NCCL_COMMS_TRACING_SERVICE_PORTS;
extern std::vector<std::string> NCCL_COMMS_TRACING_SERVICE_PORTS_DEFAULT;

enum class NCCL_COMM_ABORT_SCOPE {
  comm,
  job,
  none,
};
extern enum NCCL_COMM_ABORT_SCOPE NCCL_COMM_ABORT_SCOPE;
extern enum NCCL_COMM_ABORT_SCOPE NCCL_COMM_ABORT_SCOPE_DEFAULT;

extern int64_t NCCL_COMM_BLOCKING;
extern int64_t NCCL_COMM_BLOCKING_DEFAULT;

extern bool NCCL_COMM_DUMP_ENABLE_PROCESS_GLOBAL_ERRORS;
extern bool NCCL_COMM_DUMP_ENABLE_PROCESS_GLOBAL_ERRORS_DEFAULT;

extern std::string NCCL_COMM_EVENT_LOGGING;
extern std::string NCCL_COMM_EVENT_LOGGING_DEFAULT;

extern std::string NCCL_COMM_ID;
extern std::string NCCL_COMM_ID_DEFAULT;

extern bool NCCL_COMM_REGISTER_LOG_ENABLE;
extern bool NCCL_COMM_REGISTER_LOG_ENABLE_DEFAULT;

extern int NCCL_COMM_SHRINK_SHARE_RESOURCES;
extern int NCCL_COMM_SHRINK_SHARE_RESOURCES_DEFAULT;

extern int NCCL_COMM_SPLIT_SHARE_RESOURCES;
extern int NCCL_COMM_SPLIT_SHARE_RESOURCES_DEFAULT;

enum class NCCL_COMM_STATE_DEBUG_TOPO {
  system,
  nolocal,
  vnode,
};
extern enum NCCL_COMM_STATE_DEBUG_TOPO NCCL_COMM_STATE_DEBUG_TOPO;
extern enum NCCL_COMM_STATE_DEBUG_TOPO NCCL_COMM_STATE_DEBUG_TOPO_DEFAULT;

extern int NCCL_COMM_STATE_DEBUG_TOPO_VNODE_NLOCALRANKS;
extern int NCCL_COMM_STATE_DEBUG_TOPO_VNODE_NLOCALRANKS_DEFAULT;

extern bool NCCL_COMM_TRACING_SERVICE_ENABLE;
extern bool NCCL_COMM_TRACING_SERVICE_ENABLE_DEFAULT;

extern bool NCCL_COMM_TRACING_SERVICE_WARN_ON_PORT_CONFLICT;
extern bool NCCL_COMM_TRACING_SERVICE_WARN_ON_PORT_CONFLICT_DEFAULT;

extern int64_t NCCL_CONNECT_ROUND_MAX_PEERS;
extern int64_t NCCL_CONNECT_ROUND_MAX_PEERS_DEFAULT;

extern int64_t NCCL_CREATE_THREAD_CONTEXT;
extern int64_t NCCL_CREATE_THREAD_CONTEXT_DEFAULT;

extern int64_t NCCL_CROSS_NIC;
extern int64_t NCCL_CROSS_NIC_DEFAULT;

extern bool NCCL_CTRAN_ABORT_ON_ERROR;
extern bool NCCL_CTRAN_ABORT_ON_ERROR_DEFAULT;

extern bool NCCL_CTRAN_AG_RD_RTR;
extern bool NCCL_CTRAN_AG_RD_RTR_DEFAULT;

extern uint64_t NCCL_CTRAN_AG_RING_MIN_SPLIT_SIZE;
extern uint64_t NCCL_CTRAN_AG_RING_MIN_SPLIT_SIZE_DEFAULT;

extern int NCCL_CTRAN_AG_RING_NUM_SPLIT;
extern int NCCL_CTRAN_AG_RING_NUM_SPLIT_DEFAULT;

extern bool NCCL_CTRAN_ALGO_PROFILING_ENABLE;
extern bool NCCL_CTRAN_ALGO_PROFILING_ENABLE_DEFAULT;

extern std::string NCCL_CTRAN_ALGO_PROFILING_LOGGING;
extern std::string NCCL_CTRAN_ALGO_PROFILING_LOGGING_DEFAULT;

extern std::string NCCL_CTRAN_ALGO_PROFILING_OUTPUT;
extern std::string NCCL_CTRAN_ALGO_PROFILING_OUTPUT_DEFAULT;

extern std::string NCCL_CTRAN_ALGO_PROFILING_SAMPLING_MODE;
extern std::string NCCL_CTRAN_ALGO_PROFILING_SAMPLING_MODE_DEFAULT;

extern int NCCL_CTRAN_ALGO_PROFILING_SAMPLING_WEIGHT;
extern int NCCL_CTRAN_ALGO_PROFILING_SAMPLING_WEIGHT_DEFAULT;

extern int NCCL_CTRAN_ALLGATHER_CHECKSUM_SAMPLE_RATE;
extern int NCCL_CTRAN_ALLGATHER_CHECKSUM_SAMPLE_RATE_DEFAULT;

extern uint64_t NCCL_CTRAN_ALLGATHER_MIN_SIZE;
extern uint64_t NCCL_CTRAN_ALLGATHER_MIN_SIZE_DEFAULT;

extern bool NCCL_CTRAN_ALLOW_CUDA_GRAPH;
extern bool NCCL_CTRAN_ALLOW_CUDA_GRAPH_DEFAULT;

extern int NCCL_CTRAN_ALLREDUCE_ARG_MAX_NUM_THREAD_BLOCKS;
extern int NCCL_CTRAN_ALLREDUCE_ARG_MAX_NUM_THREAD_BLOCKS_DEFAULT;

extern int NCCL_CTRAN_ALLREDUCE_ARG_THREAD_BLOCK_SIZE;
extern int NCCL_CTRAN_ALLREDUCE_ARG_THREAD_BLOCK_SIZE_DEFAULT;

extern int NCCL_CTRAN_ALLREDUCE_DIRECT_MAX_NUM_THREAD_BLOCKS;
extern int NCCL_CTRAN_ALLREDUCE_DIRECT_MAX_NUM_THREAD_BLOCKS_DEFAULT;

extern int NCCL_CTRAN_ALLREDUCE_DIRECT_THREAD_BLOCK_SIZE;
extern int NCCL_CTRAN_ALLREDUCE_DIRECT_THREAD_BLOCK_SIZE_DEFAULT;

extern int NCCL_CTRAN_ALLREDUCE_RING_MAX_NUM_THREAD_BLOCKS;
extern int NCCL_CTRAN_ALLREDUCE_RING_MAX_NUM_THREAD_BLOCKS_DEFAULT;

extern uint32_t NCCL_CTRAN_ALLREDUCE_RING_MIN_SHARD_SIZE;
extern uint32_t NCCL_CTRAN_ALLREDUCE_RING_MIN_SHARD_SIZE_DEFAULT;

extern int NCCL_CTRAN_ALLREDUCE_RING_THREAD_BLOCK_SIZE;
extern int NCCL_CTRAN_ALLREDUCE_RING_THREAD_BLOCK_SIZE_DEFAULT;

extern uint64_t NCCL_CTRAN_ALLREDUCE_RING_TMPBUF_CHUNK_SIZE;
extern uint64_t NCCL_CTRAN_ALLREDUCE_RING_TMPBUF_CHUNK_SIZE_DEFAULT;

extern uint32_t NCCL_CTRAN_ALLREDUCE_RING_TMPBUF_NUM_CHUNKS;
extern uint32_t NCCL_CTRAN_ALLREDUCE_RING_TMPBUF_NUM_CHUNKS_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_DEDUP_CHUNK_SIZE;
extern int NCCL_CTRAN_ALLTOALLV_DEDUP_CHUNK_SIZE_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_DEDUP_FWD_NUM_THREAD_BLOCKS_PER_GROUP;
extern int NCCL_CTRAN_ALLTOALLV_DEDUP_FWD_NUM_THREAD_BLOCKS_PER_GROUP_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_DEDUP_FWD_NUM_THREAD_BLOCK_GROUPS;
extern int NCCL_CTRAN_ALLTOALLV_DEDUP_FWD_NUM_THREAD_BLOCK_GROUPS_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_DEDUP_NUM_CHUNKS;
extern int NCCL_CTRAN_ALLTOALLV_DEDUP_NUM_CHUNKS_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_DEDUP_PREPARE_NUM_THREAD_BLOCK_GROUPS;
extern int NCCL_CTRAN_ALLTOALLV_DEDUP_PREPARE_NUM_THREAD_BLOCK_GROUPS_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_DEDUP_RECV_NUM_THREAD_BLOCKS_PER_GROUP;
extern int NCCL_CTRAN_ALLTOALLV_DEDUP_RECV_NUM_THREAD_BLOCKS_PER_GROUP_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_DEDUP_RECV_NUM_THREAD_BLOCK_GROUPS;
extern int NCCL_CTRAN_ALLTOALLV_DEDUP_RECV_NUM_THREAD_BLOCK_GROUPS_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_DEDUP_SEND_NUM_THREAD_BLOCKS_PER_GROUP;
extern int NCCL_CTRAN_ALLTOALLV_DEDUP_SEND_NUM_THREAD_BLOCKS_PER_GROUP_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_DEDUP_SEND_NUM_THREAD_BLOCK_GROUPS;
extern int NCCL_CTRAN_ALLTOALLV_DEDUP_SEND_NUM_THREAD_BLOCK_GROUPS_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_DEDUP_THREAD_BLOCK_SIZE;
extern int NCCL_CTRAN_ALLTOALLV_DEDUP_THREAD_BLOCK_SIZE_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_DYNAMIC_NUM_THREAD_BLOCKS;
extern int NCCL_CTRAN_ALLTOALLV_DYNAMIC_NUM_THREAD_BLOCKS_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_DYNAMIC_THREAD_BLOCK_SIZE;
extern int NCCL_CTRAN_ALLTOALLV_DYNAMIC_THREAD_BLOCK_SIZE_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_NUM_THREAD_BLOCKS;
extern int NCCL_CTRAN_ALLTOALLV_NUM_THREAD_BLOCKS_DEFAULT;

extern int NCCL_CTRAN_ALLTOALLV_THREAD_BLOCK_SIZE;
extern int NCCL_CTRAN_ALLTOALLV_THREAD_BLOCK_SIZE_DEFAULT;

extern bool NCCL_CTRAN_ALLTOALL_CUDAGRAPH_AWARE_ENABLE;
extern bool NCCL_CTRAN_ALLTOALL_CUDAGRAPH_AWARE_ENABLE_DEFAULT;

extern int NCCL_CTRAN_ALLTOALL_DEDUP_NUM_THREAD_BLOCKS_PER_RAIL_P2P;
extern int NCCL_CTRAN_ALLTOALL_DEDUP_NUM_THREAD_BLOCKS_PER_RAIL_P2P_DEFAULT;

extern int NCCL_CTRAN_ALLTOALL_DEDUP_THREAD_BLOCK_SIZE;
extern int NCCL_CTRAN_ALLTOALL_DEDUP_THREAD_BLOCK_SIZE_DEFAULT;

extern int NCCL_CTRAN_ALLTOALL_NUM_THREAD_BLOCKS;
extern int NCCL_CTRAN_ALLTOALL_NUM_THREAD_BLOCKS_DEFAULT;

extern int NCCL_CTRAN_ALLTOALL_THREAD_BLOCK_SIZE;
extern int NCCL_CTRAN_ALLTOALL_THREAD_BLOCK_SIZE_DEFAULT;

extern uint64_t NCCL_CTRAN_ALLTOALL_THRESHOLD;
extern uint64_t NCCL_CTRAN_ALLTOALL_THRESHOLD_DEFAULT;

enum class NCCL_CTRAN_BACKENDS {
  ib,
  nvl,
  socket,
  tcpdm,
};
extern std::vector<enum NCCL_CTRAN_BACKENDS> NCCL_CTRAN_BACKENDS;
extern std::vector<enum NCCL_CTRAN_BACKENDS> NCCL_CTRAN_BACKENDS_DEFAULT;

extern uint64_t NCCL_CTRAN_BCAST_NVL_SHARED_DEVBUF_SIZE;
extern uint64_t NCCL_CTRAN_BCAST_NVL_SHARED_DEVBUF_SIZE_DEFAULT;

extern int NCCL_CTRAN_CGA_CLUSTER_SIZE;
extern int NCCL_CTRAN_CGA_CLUSTER_SIZE_DEFAULT;

extern int NCCL_CTRAN_CHECKSUM_BYTES_PER_THREAD_BLOCK;
extern int NCCL_CTRAN_CHECKSUM_BYTES_PER_THREAD_BLOCK_DEFAULT;

extern int NCCL_CTRAN_CHECKSUM_MAX_NUM_THREAD_BLOCKS;
extern int NCCL_CTRAN_CHECKSUM_MAX_NUM_THREAD_BLOCKS_DEFAULT;

extern uint64_t NCCL_CTRAN_COMPRESSED_ALLTOALLV_CHUNK_SIZE;
extern uint64_t NCCL_CTRAN_COMPRESSED_ALLTOALLV_CHUNK_SIZE_DEFAULT;

extern bool NCCL_CTRAN_COMPRESSED_ENABLE_LOGGING;
extern bool NCCL_CTRAN_COMPRESSED_ENABLE_LOGGING_DEFAULT;

extern int NCCL_CTRAN_DEVICE_TRAFFIC_SAMPLING_WEIGHT;
extern int NCCL_CTRAN_DEVICE_TRAFFIC_SAMPLING_WEIGHT_DEFAULT;

extern bool NCCL_CTRAN_ENABLE;
extern bool NCCL_CTRAN_ENABLE_DEFAULT;

extern bool NCCL_CTRAN_ENABLE_DEV_TRACE_LOG;
extern bool NCCL_CTRAN_ENABLE_DEV_TRACE_LOG_DEFAULT;

extern bool NCCL_CTRAN_ENABLE_FAULT_TOLERANCE;
extern bool NCCL_CTRAN_ENABLE_FAULT_TOLERANCE_DEFAULT;

extern bool NCCL_CTRAN_ENABLE_PRECONNECT;
extern bool NCCL_CTRAN_ENABLE_PRECONNECT_DEFAULT;

extern bool NCCL_CTRAN_ENABLE_PUT_FAST_PATH_FOR_SMALL_MSGS;
extern bool NCCL_CTRAN_ENABLE_PUT_FAST_PATH_FOR_SMALL_MSGS_DEFAULT;

extern bool NCCL_CTRAN_ENABLE_TRACE_LOG;
extern bool NCCL_CTRAN_ENABLE_TRACE_LOG_DEFAULT;

extern bool NCCL_CTRAN_ENABLE_TRACE_LOGGER;
extern bool NCCL_CTRAN_ENABLE_TRACE_LOGGER_DEFAULT;

extern bool NCCL_CTRAN_ENALBE_CLUSTER_KERNEL_LAUNCH;
extern bool NCCL_CTRAN_ENALBE_CLUSTER_KERNEL_LAUNCH_DEFAULT;

extern std::vector<std::string> NCCL_CTRAN_EX_IB_QP_CONFIG;
extern std::vector<std::string> NCCL_CTRAN_EX_IB_QP_CONFIG_DEFAULT;

extern int NCCL_CTRAN_IB_ASYNC_EVENT_POLL_INTERVAL_MS;
extern int NCCL_CTRAN_IB_ASYNC_EVENT_POLL_INTERVAL_MS_DEFAULT;

extern uint64_t NCCL_CTRAN_IB_CTRL_TC;
extern uint64_t NCCL_CTRAN_IB_CTRL_TC_DEFAULT;

extern int NCCL_CTRAN_IB_DEVICES_PER_RANK;
extern int NCCL_CTRAN_IB_DEVICES_PER_RANK_DEFAULT;

extern int NCCL_CTRAN_IB_DEVICE_STRIDE;
extern int NCCL_CTRAN_IB_DEVICE_STRIDE_DEFAULT;

extern bool NCCL_CTRAN_IB_DMABUF_ENABLE;
extern bool NCCL_CTRAN_IB_DMABUF_ENABLE_DEFAULT;

extern bool NCCL_CTRAN_IB_EPOCH_LOCK_ENABLE;
extern bool NCCL_CTRAN_IB_EPOCH_LOCK_ENABLE_DEFAULT;

extern bool NCCL_CTRAN_IB_EPOCH_LOCK_ENFORCE_CHECK;
extern bool NCCL_CTRAN_IB_EPOCH_LOCK_ENFORCE_CHECK_DEFAULT;

extern int NCCL_CTRAN_IB_MAX_QPS;
extern int NCCL_CTRAN_IB_MAX_QPS_DEFAULT;

extern std::vector<std::string> NCCL_CTRAN_IB_PG_TRAFFIC_CLASS;
extern std::vector<std::string> NCCL_CTRAN_IB_PG_TRAFFIC_CLASS_DEFAULT;

extern std::unordered_map<std::string, std::vector<std::string>>
    NCCL_CTRAN_IB_QP_CONFIG_ALGO;
extern std::unordered_map<std::string, std::vector<std::string>>
    NCCL_CTRAN_IB_QP_CONFIG_ALGO_DEFAULT;

extern std::vector<std::string> NCCL_CTRAN_IB_QP_CONFIG_XDC;
extern std::vector<std::string> NCCL_CTRAN_IB_QP_CONFIG_XDC_DEFAULT;

extern std::vector<std::string> NCCL_CTRAN_IB_QP_CONFIG_XRACK;
extern std::vector<std::string> NCCL_CTRAN_IB_QP_CONFIG_XRACK_DEFAULT;

extern std::vector<std::string> NCCL_CTRAN_IB_QP_CONFIG_XZONE;
extern std::vector<std::string> NCCL_CTRAN_IB_QP_CONFIG_XZONE_DEFAULT;

extern uint64_t NCCL_CTRAN_IB_QP_MAX_MSGS;
extern uint64_t NCCL_CTRAN_IB_QP_MAX_MSGS_DEFAULT;

extern uint64_t NCCL_CTRAN_IB_QP_SCALING_THRESHOLD;
extern uint64_t NCCL_CTRAN_IB_QP_SCALING_THRESHOLD_DEFAULT;

enum class NCCL_CTRAN_IB_VC_MODE {
  spray,
  dqplb,
};
extern enum NCCL_CTRAN_IB_VC_MODE NCCL_CTRAN_IB_VC_MODE;
extern enum NCCL_CTRAN_IB_VC_MODE NCCL_CTRAN_IB_VC_MODE_DEFAULT;

extern uint64_t NCCL_CTRAN_INTERNODE_TMPBUF_SIZE;
extern uint64_t NCCL_CTRAN_INTERNODE_TMPBUF_SIZE_DEFAULT;

extern std::string NCCL_CTRAN_KINETO_PROFILE_DIR;
extern std::string NCCL_CTRAN_KINETO_PROFILE_DIR_DEFAULT;

extern bool NCCL_CTRAN_NO_ERROR_CHECK;
extern bool NCCL_CTRAN_NO_ERROR_CHECK_DEFAULT;

extern int NCCL_CTRAN_NUM_CHECKSUMS;
extern int NCCL_CTRAN_NUM_CHECKSUMS_DEFAULT;

extern int NCCL_CTRAN_NUM_GPE_KERNEL_SYNCS;
extern int NCCL_CTRAN_NUM_GPE_KERNEL_SYNCS_DEFAULT;

extern int NCCL_CTRAN_NUM_KERNEL_ELEMS;
extern int NCCL_CTRAN_NUM_KERNEL_ELEMS_DEFAULT;

extern int NCCL_CTRAN_NUM_KERNEL_FLAGS;
extern int NCCL_CTRAN_NUM_KERNEL_FLAGS_DEFAULT;

extern int NCCL_CTRAN_NVL_ALLGATHERDIRECT_CHUNK_SIZE;
extern int NCCL_CTRAN_NVL_ALLGATHERDIRECT_CHUNK_SIZE_DEFAULT;

extern int NCCL_CTRAN_NVL_ALLGATHERDIRECT_MAX_NUM_THREAD_BLOCKS;
extern int NCCL_CTRAN_NVL_ALLGATHERDIRECT_MAX_NUM_THREAD_BLOCKS_DEFAULT;

extern int NCCL_CTRAN_NVL_ALLGATHERDIRECT_THREAD_BLOCK_SIZE;
extern int NCCL_CTRAN_NVL_ALLGATHERDIRECT_THREAD_BLOCK_SIZE_DEFAULT;

extern int NCCL_CTRAN_NVL_BROADCAST_CHUNK_SIZE;
extern int NCCL_CTRAN_NVL_BROADCAST_CHUNK_SIZE_DEFAULT;

extern int NCCL_CTRAN_NVL_BROADCAST_MAX_NUM_THREAD_BLOCKS;
extern int NCCL_CTRAN_NVL_BROADCAST_MAX_NUM_THREAD_BLOCKS_DEFAULT;

extern int NCCL_CTRAN_NVL_BROADCAST_THREAD_BLOCK_SIZE;
extern int NCCL_CTRAN_NVL_BROADCAST_THREAD_BLOCK_SIZE_DEFAULT;

extern bool NCCL_CTRAN_NVL_FABRIC_ENABLE;
extern bool NCCL_CTRAN_NVL_FABRIC_ENABLE_DEFAULT;

extern int NCCL_CTRAN_NVL_SENDRECV_CHUNK_SIZE;
extern int NCCL_CTRAN_NVL_SENDRECV_CHUNK_SIZE_DEFAULT;

extern bool NCCL_CTRAN_NVL_SENDRECV_COPY_ENGINE_ENABLE;
extern bool NCCL_CTRAN_NVL_SENDRECV_COPY_ENGINE_ENABLE_DEFAULT;

extern int NCCL_CTRAN_NVL_SENDRECV_MAX_NUM_THREAD_BLOCKS;
extern int NCCL_CTRAN_NVL_SENDRECV_MAX_NUM_THREAD_BLOCKS_DEFAULT;

extern int NCCL_CTRAN_NVL_SENDRECV_THREAD_BLOCK_SIZE;
extern int NCCL_CTRAN_NVL_SENDRECV_THREAD_BLOCK_SIZE_DEFAULT;

extern uint64_t NCCL_CTRAN_P2P_NVL_SHARED_DEVBUF_SIZE;
extern uint64_t NCCL_CTRAN_P2P_NVL_SHARED_DEVBUF_SIZE_DEFAULT;

enum class NCCL_CTRAN_PROFILING {
  none,
  stdout,
  info,
  kineto,
};
extern enum NCCL_CTRAN_PROFILING NCCL_CTRAN_PROFILING;
extern enum NCCL_CTRAN_PROFILING NCCL_CTRAN_PROFILING_DEFAULT;

extern int NCCL_CTRAN_PROFILING_REPORT_COUNT;
extern int NCCL_CTRAN_PROFILING_REPORT_COUNT_DEFAULT;

extern bool NCCL_CTRAN_QP_PROFILING_ENABLE;
extern bool NCCL_CTRAN_QP_PROFILING_ENABLE_DEFAULT;

extern std::string NCCL_CTRAN_QP_PROFILING_OUTPUT;
extern std::string NCCL_CTRAN_QP_PROFILING_OUTPUT_DEFAULT;

extern int NCCL_CTRAN_QP_PROFILING_SAMPLING_WEIGHT;
extern int NCCL_CTRAN_QP_PROFILING_SAMPLING_WEIGHT_DEFAULT;

extern int NCCL_CTRAN_REDUCESCATTER_DIRECT_MAX_NUM_THREAD_BLOCKS;
extern int NCCL_CTRAN_REDUCESCATTER_DIRECT_MAX_NUM_THREAD_BLOCKS_DEFAULT;

extern uint64_t NCCL_CTRAN_REDUCESCATTER_DIRECT_MIN_SIZE;
extern uint64_t NCCL_CTRAN_REDUCESCATTER_DIRECT_MIN_SIZE_DEFAULT;

extern int NCCL_CTRAN_REDUCESCATTER_REDUCE_NELEM_PER_THREAD_BLOCK;
extern int NCCL_CTRAN_REDUCESCATTER_REDUCE_NELEM_PER_THREAD_BLOCK_DEFAULT;

extern int NCCL_CTRAN_REDUCESCATTER_RHD_MAX_NUM_THREAD_BLOCKS;
extern int NCCL_CTRAN_REDUCESCATTER_RHD_MAX_NUM_THREAD_BLOCKS_DEFAULT;

extern int NCCL_CTRAN_REDUCESCATTER_RING_MAX_NUM_THREAD_BLOCKS;
extern int NCCL_CTRAN_REDUCESCATTER_RING_MAX_NUM_THREAD_BLOCKS_DEFAULT;

extern int NCCL_CTRAN_REDUCESCATTER_THREAD_BLOCK_SIZE;
extern int NCCL_CTRAN_REDUCESCATTER_THREAD_BLOCK_SIZE_DEFAULT;

enum class NCCL_CTRAN_REGISTER {
  none,
  lazy,
  eager,
  async,
};
extern enum NCCL_CTRAN_REGISTER NCCL_CTRAN_REGISTER;
extern enum NCCL_CTRAN_REGISTER NCCL_CTRAN_REGISTER_DEFAULT;

extern bool NCCL_CTRAN_REGISTER_ERROR_ON_DYNAMIC;
extern bool NCCL_CTRAN_REGISTER_ERROR_ON_DYNAMIC_DEFAULT;

extern int NCCL_CTRAN_REGISTER_REPORT_SNAPSHOT_COUNT;
extern int NCCL_CTRAN_REGISTER_REPORT_SNAPSHOT_COUNT_DEFAULT;

extern bool NCCL_CTRAN_REGISTRATION_SIZE_CHECK;
extern bool NCCL_CTRAN_REGISTRATION_SIZE_CHECK_DEFAULT;

extern int NCCL_CTRAN_SENDRECV_CHECKSUM_SAMPLE_RATE;
extern int NCCL_CTRAN_SENDRECV_CHECKSUM_SAMPLE_RATE_DEFAULT;

extern int32_t NCCL_CTRAN_SOCKET_POLL_TIMEOUT;
extern int32_t NCCL_CTRAN_SOCKET_POLL_TIMEOUT_DEFAULT;

extern std::string NCCL_CTRAN_TRACE_LOGGER_LOCAL_DIR;
extern std::string NCCL_CTRAN_TRACE_LOGGER_LOCAL_DIR_DEFAULT;

extern bool NCCL_CTRAN_TRANSPORT_PROFILER;
extern bool NCCL_CTRAN_TRANSPORT_PROFILER_DEFAULT;

extern uint64_t NCCL_CTRAN_UNPACK_NUM_THREAD_BLOCKS;
extern uint64_t NCCL_CTRAN_UNPACK_NUM_THREAD_BLOCKS_DEFAULT;

extern uint64_t NCCL_CTRAN_UNPACK_THREAD_BLOCK_SIZE;
extern uint64_t NCCL_CTRAN_UNPACK_THREAD_BLOCK_SIZE_DEFAULT;

extern int32_t NCCL_CTRAN_WIN_SIGNAL_SIZE;
extern int32_t NCCL_CTRAN_WIN_SIGNAL_SIZE_DEFAULT;

extern int64_t NCCL_CUMEM_ENABLE;
extern int64_t NCCL_CUMEM_ENABLE_DEFAULT;

extern int64_t NCCL_CUMEM_HOST_ENABLE;
extern int64_t NCCL_CUMEM_HOST_ENABLE_DEFAULT;

extern bool NCCL_CVARS_LOG_INFO;
extern bool NCCL_CVARS_LOG_INFO_DEFAULT;

extern int NCCL_DDA_ALLREDUCE_MAX_BLOCKS;
extern int NCCL_DDA_ALLREDUCE_MAX_BLOCKS_DEFAULT;

extern uint64_t NCCL_DDA_ALLREDUCE_SCATGAT_THRESHOLD;
extern uint64_t NCCL_DDA_ALLREDUCE_SCATGAT_THRESHOLD_DEFAULT;

extern uint64_t NCCL_DDA_ALLREDUCE_TREE_THRESHOLD;
extern uint64_t NCCL_DDA_ALLREDUCE_TREE_THRESHOLD_DEFAULT;

extern uint64_t NCCL_DDA_TMPBUFF_SIZE;
extern uint64_t NCCL_DDA_TMPBUFF_SIZE_DEFAULT;

extern std::string NCCL_DEBUG;
extern std::string NCCL_DEBUG_DEFAULT;

extern std::string NCCL_DEBUG_FILE;
extern std::string NCCL_DEBUG_FILE_DEFAULT;

extern bool NCCL_DEBUG_LOGGING_ASYNC;
extern bool NCCL_DEBUG_LOGGING_ASYNC_DEFAULT;

extern std::string NCCL_DEBUG_SUBSYS;
extern std::string NCCL_DEBUG_SUBSYS_DEFAULT;

extern std::string NCCL_DEBUG_TIMESTAMP_FORMAT;
extern std::string NCCL_DEBUG_TIMESTAMP_FORMAT_DEFAULT;

extern std::string NCCL_DEBUG_TIMESTAMP_LEVELS;
extern std::string NCCL_DEBUG_TIMESTAMP_LEVELS_DEFAULT;

extern int64_t NCCL_DMABUF_ENABLE;
extern int64_t NCCL_DMABUF_ENABLE_DEFAULT;

extern int NCCL_ENV_CTA_POLICY;
extern int NCCL_ENV_CTA_POLICY_DEFAULT;

enum class NCCL_FASTINIT_MODE {
  none,
  ring_hybrid,
};
extern enum NCCL_FASTINIT_MODE NCCL_FASTINIT_MODE;
extern enum NCCL_FASTINIT_MODE NCCL_FASTINIT_MODE_DEFAULT;

extern std::vector<std::string> NCCL_FILTER_ALGO_LOGGING_BY_RANKS;
extern std::vector<std::string> NCCL_FILTER_ALGO_LOGGING_BY_RANKS_DEFAULT;

extern std::vector<std::string> NCCL_FILTER_MEM_LOGGING_BY_RANKS;
extern std::vector<std::string> NCCL_FILTER_MEM_LOGGING_BY_RANKS_DEFAULT;

extern std::vector<std::string> NCCL_FILTER_MEM_REG_LOGGING_BY_RANKS;
extern std::vector<std::string> NCCL_FILTER_MEM_REG_LOGGING_BY_RANKS_DEFAULT;

extern bool NCCL_FIRST_COMM_AS_WORLD;
extern bool NCCL_FIRST_COMM_AS_WORLD_DEFAULT;

extern int64_t NCCL_GDRCOPY_ENABLE;
extern int64_t NCCL_GDRCOPY_ENABLE_DEFAULT;

extern int64_t NCCL_GDRCOPY_FIFO_ENABLE;
extern int64_t NCCL_GDRCOPY_FIFO_ENABLE_DEFAULT;

extern int64_t NCCL_GDRCOPY_FLUSH_ENABLE;
extern int64_t NCCL_GDRCOPY_FLUSH_ENABLE_DEFAULT;

extern int64_t NCCL_GDRCOPY_SYNC_ENABLE;
extern int64_t NCCL_GDRCOPY_SYNC_ENABLE_DEFAULT;

extern int64_t NCCL_GDR_FLUSH_DISABLE;
extern int64_t NCCL_GDR_FLUSH_DISABLE_DEFAULT;

extern std::string NCCL_GRAPH_DUMP_FILE;
extern std::string NCCL_GRAPH_DUMP_FILE_DEFAULT;

extern int64_t NCCL_GRAPH_DUMP_FILE_RANK;
extern int64_t NCCL_GRAPH_DUMP_FILE_RANK_DEFAULT;

extern std::string NCCL_GRAPH_FILE;
extern std::string NCCL_GRAPH_FILE_DEFAULT;

extern int64_t NCCL_GRAPH_HELPER_DISABLE;
extern int64_t NCCL_GRAPH_HELPER_DISABLE_DEFAULT;

extern int64_t NCCL_GRAPH_MIXING_SUPPORT;
extern int64_t NCCL_GRAPH_MIXING_SUPPORT_DEFAULT;

extern int64_t NCCL_GRAPH_REGISTER;
extern int64_t NCCL_GRAPH_REGISTER_DEFAULT;

extern int64_t NCCL_GROUP_CUDA_STREAM;
extern int64_t NCCL_GROUP_CUDA_STREAM_DEFAULT;

extern std::string NCCL_HOSTID;
extern std::string NCCL_HOSTID_DEFAULT;

extern std::vector<std::string> NCCL_HPC_JOB_IDS;
extern std::vector<std::string> NCCL_HPC_JOB_IDS_DEFAULT;

extern std::string NCCL_IBVERBS_PATH;
extern std::string NCCL_IBVERBS_PATH_DEFAULT;

extern int64_t NCCL_IB_ADAPTIVE_ROUTING;
extern int64_t NCCL_IB_ADAPTIVE_ROUTING_DEFAULT;

extern std::string NCCL_IB_ADDR_FAMILY;
extern std::string NCCL_IB_ADDR_FAMILY_DEFAULT;

extern std::string NCCL_IB_ADDR_RANGE;
extern std::string NCCL_IB_ADDR_RANGE_DEFAULT;

extern int64_t NCCL_IB_AR_THRESHOLD;
extern int64_t NCCL_IB_AR_THRESHOLD_DEFAULT;

enum class NCCL_IB_ASYNC_EVENT_LOOP {
  baseline,
  ctran,
};
extern enum NCCL_IB_ASYNC_EVENT_LOOP NCCL_IB_ASYNC_EVENT_LOOP;
extern enum NCCL_IB_ASYNC_EVENT_LOOP NCCL_IB_ASYNC_EVENT_LOOP_DEFAULT;

extern int NCCL_IB_DATA_DIRECT;
extern int NCCL_IB_DATA_DIRECT_DEFAULT;

extern int64_t NCCL_IB_DISABLE;
extern int64_t NCCL_IB_DISABLE_DEFAULT;

extern int64_t NCCL_IB_ECE_ENABLE;
extern int64_t NCCL_IB_ECE_ENABLE_DEFAULT;

extern int64_t NCCL_IB_FIFO_TC;
extern int64_t NCCL_IB_FIFO_TC_DEFAULT;

extern int64_t NCCL_IB_GID_INDEX;
extern int64_t NCCL_IB_GID_INDEX_DEFAULT;

extern std::string NCCL_IB_HCA_PREFIX;
extern std::string NCCL_IB_HCA_PREFIX_DEFAULT;
extern std::vector<std::string> NCCL_IB_HCA;
extern std::vector<std::string> NCCL_IB_HCA_DEFAULT;

extern int NCCL_IB_LINK_DOWN_TIMEOUT;
extern int NCCL_IB_LINK_DOWN_TIMEOUT_DEFAULT;

extern int64_t NCCL_IB_MERGE_NICS;
extern int64_t NCCL_IB_MERGE_NICS_DEFAULT;

extern int64_t NCCL_IB_MERGE_VFS;
extern int64_t NCCL_IB_MERGE_VFS_DEFAULT;

extern int64_t NCCL_IB_MQP_RETRY_ALL;
extern int64_t NCCL_IB_MQP_RETRY_ALL_DEFAULT;

extern int64_t NCCL_IB_MQP_RETRY_CNT;
extern int64_t NCCL_IB_MQP_RETRY_CNT_DEFAULT;

extern int64_t NCCL_IB_MQP_RETRY_SLEEP_MSEC;
extern int64_t NCCL_IB_MQP_RETRY_SLEEP_MSEC_DEFAULT;

extern int64_t NCCL_IB_PCI_RELAXED_ORDERING;
extern int64_t NCCL_IB_PCI_RELAXED_ORDERING_DEFAULT;

extern int64_t NCCL_IB_PKEY;
extern int64_t NCCL_IB_PKEY_DEFAULT;

extern int64_t NCCL_IB_QPS_PER_CONNECTION;
extern int64_t NCCL_IB_QPS_PER_CONNECTION_DEFAULT;

extern int64_t NCCL_IB_RETRY_CNT;
extern int64_t NCCL_IB_RETRY_CNT_DEFAULT;

extern int64_t NCCL_IB_RETURN_ASYNC_EVENTS;
extern int64_t NCCL_IB_RETURN_ASYNC_EVENTS_DEFAULT;

extern int64_t NCCL_IB_ROCE_VERSION_NUM;
extern int64_t NCCL_IB_ROCE_VERSION_NUM_DEFAULT;

extern int64_t NCCL_IB_ROUTABLE_FLID_GID_INDEX;
extern int64_t NCCL_IB_ROUTABLE_FLID_GID_INDEX_DEFAULT;

extern int64_t NCCL_IB_SL;
extern int64_t NCCL_IB_SL_DEFAULT;

extern int64_t NCCL_IB_SPLIT_DATA_ON_QPS;
extern int64_t NCCL_IB_SPLIT_DATA_ON_QPS_DEFAULT;

extern int64_t NCCL_IB_TC;
extern int64_t NCCL_IB_TC_DEFAULT;

extern int64_t NCCL_IB_TIMEOUT;
extern int64_t NCCL_IB_TIMEOUT_DEFAULT;

extern int64_t NCCL_IB_USE_INLINE;
extern int64_t NCCL_IB_USE_INLINE_DEFAULT;

extern int64_t NCCL_IB_WARN_RAIL_LOCAL;
extern int64_t NCCL_IB_WARN_RAIL_LOCAL_DEFAULT;

extern int64_t NCCL_IGNORE_CPU_AFFINITY;
extern int64_t NCCL_IGNORE_CPU_AFFINITY_DEFAULT;

extern int64_t NCCL_IGNORE_DISABLED_P2P;
extern int64_t NCCL_IGNORE_DISABLED_P2P_DEFAULT;

extern bool NCCL_IGNORE_TOPO_LOAD_FAILURE;
extern bool NCCL_IGNORE_TOPO_LOAD_FAILURE_DEFAULT;

extern int64_t NCCL_L1_SHARED_MEMORY_CARVEOUT;
extern int64_t NCCL_L1_SHARED_MEMORY_CARVEOUT_DEFAULT;

extern std::string NCCL_LAUNCH_MODE;
extern std::string NCCL_LAUNCH_MODE_DEFAULT;

extern bool NCCL_LAUNCH_ORDER_IMPLICIT;
extern bool NCCL_LAUNCH_ORDER_IMPLICIT_DEFAULT;

extern bool NCCL_LAUNCH_RACE_FATAL;
extern bool NCCL_LAUNCH_RACE_FATAL_DEFAULT;

extern bool NCCL_LAZY_SETUP_CHANNELS;
extern bool NCCL_LAZY_SETUP_CHANNELS_DEFAULT;

extern int64_t NCCL_LEGACY_CUDA_REGISTER;
extern int64_t NCCL_LEGACY_CUDA_REGISTER_DEFAULT;

extern int64_t NCCL_LL128_BUFFSIZE;
extern int64_t NCCL_LL128_BUFFSIZE_DEFAULT;

extern bool NCCL_LL128_C2C;
extern bool NCCL_LL128_C2C_DEFAULT;

extern int64_t NCCL_LL128_NTHREADS;
extern int64_t NCCL_LL128_NTHREADS_DEFAULT;

extern int64_t NCCL_LL_BUFFSIZE;
extern int64_t NCCL_LL_BUFFSIZE_DEFAULT;

extern int64_t NCCL_LOCAL_REGISTER;
extern int64_t NCCL_LOCAL_REGISTER_DEFAULT;

extern uint64_t NCCL_MAPPERTRACE_COLL_RECORD_MAX;
extern uint64_t NCCL_MAPPERTRACE_COLL_RECORD_MAX_DEFAULT;

extern bool NCCL_MAPPERTRACE_ENABLE;
extern bool NCCL_MAPPERTRACE_ENABLE_DEFAULT;

extern uint64_t NCCL_MAPPERTRACE_EVENT_RECORD_MAX;
extern uint64_t NCCL_MAPPERTRACE_EVENT_RECORD_MAX_DEFAULT;

extern std::string NCCL_MASTER_ADDR;
extern std::string NCCL_MASTER_ADDR_DEFAULT;

extern uint16_t NCCL_MASTER_PORT;
extern uint16_t NCCL_MASTER_PORT_DEFAULT;

extern int NCCL_MAX_CTAS;
extern int NCCL_MAX_CTAS_DEFAULT;

extern int64_t NCCL_MAX_NCHANNELS;
extern int64_t NCCL_MAX_NCHANNELS_DEFAULT;

extern int NCCL_MAX_NRINGS;
extern int NCCL_MAX_NRINGS_DEFAULT;

extern int64_t NCCL_MAX_P2P_NCHANNELS;
extern int64_t NCCL_MAX_P2P_NCHANNELS_DEFAULT;

extern std::string NCCL_MEMORY_EVENT_LOGGING;
extern std::string NCCL_MEMORY_EVENT_LOGGING_DEFAULT;

extern bool NCCL_MEM_ENABLE_MC_ALIGNMENT;
extern bool NCCL_MEM_ENABLE_MC_ALIGNMENT_DEFAULT;

extern size_t NCCL_MEM_POOL_SIZE;
extern size_t NCCL_MEM_POOL_SIZE_DEFAULT;

enum class NCCL_MEM_SYNC_DOMAIN {
  local,
  remote,
};
extern enum NCCL_MEM_SYNC_DOMAIN NCCL_MEM_SYNC_DOMAIN;
extern enum NCCL_MEM_SYNC_DOMAIN NCCL_MEM_SYNC_DOMAIN_DEFAULT;

extern bool NCCL_MEM_USE_SLAB_ALLOCATOR;
extern bool NCCL_MEM_USE_SLAB_ALLOCATOR_DEFAULT;

extern int NCCL_MIN_CTAS;
extern int NCCL_MIN_CTAS_DEFAULT;

extern int64_t NCCL_MIN_NCHANNELS;
extern int64_t NCCL_MIN_NCHANNELS_DEFAULT;

extern int NCCL_MIN_NRINGS;
extern int NCCL_MIN_NRINGS_DEFAULT;

extern int64_t NCCL_MIN_P2P_NCHANNELS;
extern int64_t NCCL_MIN_P2P_NCHANNELS_DEFAULT;

extern int64_t NCCL_MNNVL_CLIQUE_ID;
extern int64_t NCCL_MNNVL_CLIQUE_ID_DEFAULT;

extern int NCCL_MNNVL_CLIQUE_SIZE;
extern int NCCL_MNNVL_CLIQUE_SIZE_DEFAULT;

extern bool NCCL_MNNVL_DETERMINISTIC_COLLECTIVE_ENABLE;
extern bool NCCL_MNNVL_DETERMINISTIC_COLLECTIVE_ENABLE_DEFAULT;

extern int64_t NCCL_MNNVL_ENABLE;
extern int64_t NCCL_MNNVL_ENABLE_DEFAULT;

extern bool NCCL_MNNVL_SCATTER_NETS_ENABLE;
extern bool NCCL_MNNVL_SCATTER_NETS_ENABLE_DEFAULT;

extern bool NCCL_MNNVL_TRUNK_DISABLE;
extern bool NCCL_MNNVL_TRUNK_DISABLE_DEFAULT;

extern int64_t NCCL_MNNVL_UUID;
extern int64_t NCCL_MNNVL_UUID_DEFAULT;

extern int64_t NCCL_NCHANNELS_PER_NET_PEER;
extern int64_t NCCL_NCHANNELS_PER_NET_PEER_DEFAULT;

extern std::string NCCL_NETDEVS_POLICY;
extern std::string NCCL_NETDEVS_POLICY_DEFAULT;

extern std::string NCCL_NETWORK;
extern std::string NCCL_NETWORK_DEFAULT;

extern bool NCCL_NETWORK_PERF_MONITOR_ENABLE;
extern bool NCCL_NETWORK_PERF_MONITOR_ENABLE_DEFAULT;

extern bool NCCL_NETWORK_PERF_MONITOR_SCUBA_LOGGING_ENABLE;
extern bool NCCL_NETWORK_PERF_MONITOR_SCUBA_LOGGING_ENABLE_DEFAULT;

extern int64_t NCCL_NET_DISABLE_INTRA;
extern int64_t NCCL_NET_DISABLE_INTRA_DEFAULT;

extern int64_t NCCL_NET_FORCE_FLUSH;
extern int64_t NCCL_NET_FORCE_FLUSH_DEFAULT;

extern std::string NCCL_NET_FORCE_MERGE;
extern std::string NCCL_NET_FORCE_MERGE_DEFAULT;

extern bool NCCL_NET_GDR_C2C;
extern bool NCCL_NET_GDR_C2C_DEFAULT;

extern std::string NCCL_NET_GDR_LEVEL;
extern std::string NCCL_NET_GDR_LEVEL_DEFAULT;

extern int64_t NCCL_NET_GDR_READ;
extern int64_t NCCL_NET_GDR_READ_DEFAULT;

extern std::string NCCL_NET_MERGE_LEVEL;
extern std::string NCCL_NET_MERGE_LEVEL_DEFAULT;

extern int64_t NCCL_NET_OPTIONAL_RECV_COMPLETION_CVAR;
extern int64_t NCCL_NET_OPTIONAL_RECV_COMPLETION_CVAR_DEFAULT;

extern int64_t NCCL_NET_OVERHEAD;
extern int64_t NCCL_NET_OVERHEAD_DEFAULT;

extern std::string NCCL_NET_PLUGIN;
extern std::string NCCL_NET_PLUGIN_DEFAULT;

extern int NCCL_NET_PLUGIN_REF_COUNT;
extern int NCCL_NET_PLUGIN_REF_COUNT_DEFAULT;

extern int64_t NCCL_NET_SHARED_BUFFERS;
extern int64_t NCCL_NET_SHARED_BUFFERS_DEFAULT;

extern int64_t NCCL_NET_SHARED_COMMS;
extern int64_t NCCL_NET_SHARED_COMMS_DEFAULT;

extern int64_t NCCL_NSOCKS_PERTHREAD;
extern int64_t NCCL_NSOCKS_PERTHREAD_DEFAULT;

extern int64_t NCCL_NTHREADS;
extern int64_t NCCL_NTHREADS_DEFAULT;

extern int64_t NCCL_NVB_DISABLE;
extern int64_t NCCL_NVB_DISABLE_DEFAULT;

extern int64_t NCCL_NVB_PRECONNECT;
extern int64_t NCCL_NVB_PRECONNECT_DEFAULT;

extern bool NCCL_NVLINK_UTIL_CENTRIC_SCHED_ENABLE;
extern bool NCCL_NVLINK_UTIL_CENTRIC_SCHED_ENABLE_DEFAULT;

extern int64_t NCCL_NVLSTREE_MAX_CHUNKSIZE;
extern int64_t NCCL_NVLSTREE_MAX_CHUNKSIZE_DEFAULT;

extern int64_t NCCL_NVLS_CHUNKSIZE;
extern int64_t NCCL_NVLS_CHUNKSIZE_DEFAULT;

extern int64_t NCCL_NVLS_ENABLE;
extern int64_t NCCL_NVLS_ENABLE_DEFAULT;

extern int NCCL_NVLS_NCHANNELS;
extern int NCCL_NVLS_NCHANNELS_DEFAULT;

extern bool NCCL_NVTX_DISABLE;
extern bool NCCL_NVTX_DISABLE_DEFAULT;

extern int64_t NCCL_OOB_NET_ENABLE;
extern int64_t NCCL_OOB_NET_ENABLE_DEFAULT;

extern std::string NCCL_OOB_NET_IFNAME;
extern std::string NCCL_OOB_NET_IFNAME_DEFAULT;

extern int64_t NCCL_P2P_DIRECT_DISABLE;
extern int64_t NCCL_P2P_DIRECT_DISABLE_DEFAULT;

extern bool NCCL_P2P_DISABLE;
extern bool NCCL_P2P_DISABLE_DEFAULT;

extern std::string NCCL_P2P_LEVEL;
extern std::string NCCL_P2P_LEVEL_DEFAULT;

extern int64_t NCCL_P2P_LL_THRESHOLD;
extern int64_t NCCL_P2P_LL_THRESHOLD_DEFAULT;

extern int64_t NCCL_P2P_NET_CHUNKSIZE;
extern int64_t NCCL_P2P_NET_CHUNKSIZE_DEFAULT;

extern int64_t NCCL_P2P_NVL_CHUNKSIZE;
extern int64_t NCCL_P2P_NVL_CHUNKSIZE_DEFAULT;

extern int64_t NCCL_P2P_PCI_CHUNKSIZE;
extern int64_t NCCL_P2P_PCI_CHUNKSIZE_DEFAULT;

extern int64_t NCCL_P2P_PXN_LEVEL;
extern int64_t NCCL_P2P_PXN_LEVEL_DEFAULT;

extern int64_t NCCL_P2P_READ_ENABLE;
extern int64_t NCCL_P2P_READ_ENABLE_DEFAULT;

extern int64_t NCCL_P2P_USE_CUDA_MEMCPY;
extern int64_t NCCL_P2P_USE_CUDA_MEMCPY_DEFAULT;

extern int64_t NCCL_PAT_ENABLE;
extern int64_t NCCL_PAT_ENABLE_DEFAULT;

extern int NCCL_PROCESS_GLOBAL_ERRORS_MAX_STACK_TRACES;
extern int NCCL_PROCESS_GLOBAL_ERRORS_MAX_STACK_TRACES_DEFAULT;

extern std::string NCCL_PROFILER_PLUGIN;
extern std::string NCCL_PROFILER_PLUGIN_DEFAULT;

extern int64_t NCCL_PROGRESS_APPENDOP_FREQ;
extern int64_t NCCL_PROGRESS_APPENDOP_FREQ_DEFAULT;

extern std::string NCCL_PROTO;
extern std::string NCCL_PROTO_DEFAULT;

extern std::vector<std::string> NCCL_PROXYMOCK_NET_SEND_FAILURE;
extern std::vector<std::string> NCCL_PROXYMOCK_NET_SEND_FAILURE_DEFAULT;

extern std::vector<std::string> NCCL_PROXYTRACE;
extern std::vector<std::string> NCCL_PROXYTRACE_DEFAULT;

extern int NCCL_PROXYTRACE_RECORD_MAX;
extern int NCCL_PROXYTRACE_RECORD_MAX_DEFAULT;

extern int64_t NCCL_PROXY_APPEND_BATCH_SIZE;
extern int64_t NCCL_PROXY_APPEND_BATCH_SIZE_DEFAULT;

extern std::string NCCL_PROXY_CPUSET;
extern std::string NCCL_PROXY_CPUSET_DEFAULT;

extern int64_t NCCL_PROXY_DUMP_SIGNAL;
extern int64_t NCCL_PROXY_DUMP_SIGNAL_DEFAULT;

extern bool NCCL_PXN_C2C;
extern bool NCCL_PXN_C2C_DEFAULT;

extern int64_t NCCL_PXN_DISABLE;
extern int64_t NCCL_PXN_DISABLE_DEFAULT;

extern std::string NCCL_RAS_ADDR;
extern std::string NCCL_RAS_ADDR_DEFAULT;

extern int64_t NCCL_RAS_ENABLE;
extern int64_t NCCL_RAS_ENABLE_DEFAULT;

extern int64_t NCCL_RAS_TIMEOUT_FACTOR;
extern int64_t NCCL_RAS_TIMEOUT_FACTOR_DEFAULT;

enum class NCCL_REDUCESCATTER_ALGO {
  orig,
  ctran,
  ctdirect,
  ctring,
  ctrhd,
};
extern enum NCCL_REDUCESCATTER_ALGO NCCL_REDUCESCATTER_ALGO;
extern enum NCCL_REDUCESCATTER_ALGO NCCL_REDUCESCATTER_ALGO_DEFAULT;

extern int64_t NCCL_REPORT_CONNECT_PROGRESS;
extern int64_t NCCL_REPORT_CONNECT_PROGRESS_DEFAULT;

extern int64_t NCCL_RUNTIME_CONNECT;
extern int64_t NCCL_RUNTIME_CONNECT_DEFAULT;

extern bool NCCL_SCUBA_ENABLE_INCLUDE_BACKEND_TOPOLOGY;
extern bool NCCL_SCUBA_ENABLE_INCLUDE_BACKEND_TOPOLOGY_DEFAULT;

extern std::string NCCL_SCUBA_LOG_FILE_PREFIX;
extern std::string NCCL_SCUBA_LOG_FILE_PREFIX_DEFAULT;

extern bool NCCL_SCUBA_STACK_TRACE_ON_ERROR_ENABLED;
extern bool NCCL_SCUBA_STACK_TRACE_ON_ERROR_ENABLED_DEFAULT;

enum class NCCL_SENDRECV_ALGO {
  orig,
  ctran,
};
extern enum NCCL_SENDRECV_ALGO NCCL_SENDRECV_ALGO;
extern enum NCCL_SENDRECV_ALGO NCCL_SENDRECV_ALGO_DEFAULT;

extern int NCCL_SET_CPU_STACK_SIZE;
extern int NCCL_SET_CPU_STACK_SIZE_DEFAULT;

extern int64_t NCCL_SET_STACK_SIZE;
extern int64_t NCCL_SET_STACK_SIZE_DEFAULT;

extern int64_t NCCL_SET_THREAD_NAME;
extern int64_t NCCL_SET_THREAD_NAME_DEFAULT;

extern int64_t NCCL_SHM_DISABLE;
extern int64_t NCCL_SHM_DISABLE_DEFAULT;

extern int64_t NCCL_SHM_LOCALITY;
extern int64_t NCCL_SHM_LOCALITY_DEFAULT;

extern int64_t NCCL_SHM_MEMCPY_MODE;
extern int64_t NCCL_SHM_MEMCPY_MODE_DEFAULT;

extern int64_t NCCL_SHM_USE_CUDA_MEMCPY;
extern int64_t NCCL_SHM_USE_CUDA_MEMCPY_DEFAULT;

extern int64_t NCCL_SINGLE_PROC_MEM_REG_ENABLE;
extern int64_t NCCL_SINGLE_PROC_MEM_REG_ENABLE_DEFAULT;

extern bool NCCL_SKIP_TCPFORM_RING;
extern bool NCCL_SKIP_TCPFORM_RING_DEFAULT;

extern std::string NCCL_SLOW_COLL_LOGGING;
extern std::string NCCL_SLOW_COLL_LOGGING_DEFAULT;

extern bool NCCL_SLOW_RANK_ENABLE;
extern bool NCCL_SLOW_RANK_ENABLE_DEFAULT;

extern std::string NCCL_SLOW_RANK_LOGGING;
extern std::string NCCL_SLOW_RANK_LOGGING_DEFAULT;

extern int NCCL_SLOW_RANK_LOG_NSAMPLES;
extern int NCCL_SLOW_RANK_LOG_NSAMPLES_DEFAULT;

extern int NCCL_SLOW_RANK_PERF_WINDOW_SIZE;
extern int NCCL_SLOW_RANK_PERF_WINDOW_SIZE_DEFAULT;

extern int NCCL_SLOW_RANK_RDMA_PERF_EFFICIENCY_PERC;
extern int NCCL_SLOW_RANK_RDMA_PERF_EFFICIENCY_PERC_DEFAULT;

extern int NCCL_SLOW_RANK_SCUBA_LOGGING_INTERVAL_IN_USECS;
extern int NCCL_SLOW_RANK_SCUBA_LOGGING_INTERVAL_IN_USECS_DEFAULT;

extern int NCCL_SLOW_RANK_VARIANCE_PERC;
extern int NCCL_SLOW_RANK_VARIANCE_PERC_DEFAULT;

extern int NCCL_SLOW_RANK_WQE_WINDOW_SIZE;
extern int NCCL_SLOW_RANK_WQE_WINDOW_SIZE_DEFAULT;

extern std::string NCCL_SOCKET_FAMILY;
extern std::string NCCL_SOCKET_FAMILY_DEFAULT;

extern std::string NCCL_SOCKET_IFNAME;
extern std::string NCCL_SOCKET_IFNAME_DEFAULT;

extern int NCCL_SOCKET_INLINE;
extern int NCCL_SOCKET_INLINE_DEFAULT;

extern std::string NCCL_SOCKET_IPADDR_PREFIX;
extern std::string NCCL_SOCKET_IPADDR_PREFIX_DEFAULT;

extern int NCCL_SOCKET_MIN_TASKSIZE;
extern int NCCL_SOCKET_MIN_TASKSIZE_DEFAULT;

extern int64_t NCCL_SOCKET_NTHREADS;
extern int64_t NCCL_SOCKET_NTHREADS_DEFAULT;

extern int NCCL_SOCKET_RCVBUF;
extern int NCCL_SOCKET_RCVBUF_DEFAULT;

extern int64_t NCCL_SOCKET_RETRY_CNT;
extern int64_t NCCL_SOCKET_RETRY_CNT_DEFAULT;

extern int64_t NCCL_SOCKET_RETRY_SLEEP_MSEC;
extern int64_t NCCL_SOCKET_RETRY_SLEEP_MSEC_DEFAULT;

extern int NCCL_SOCKET_SNDBUF;
extern int NCCL_SOCKET_SNDBUF_DEFAULT;

extern int NCCL_SOCKET_TOS_CONFIG;
extern int NCCL_SOCKET_TOS_CONFIG_DEFAULT;

extern int NCCL_SYM_CTAS;
extern int NCCL_SYM_CTAS_DEFAULT;

extern std::string NCCL_SYM_KERNEL;
extern std::string NCCL_SYM_KERNEL_DEFAULT;

extern int NCCL_TCPSTORE_BACKOFF_INITIAL_INTERVAL;
extern int NCCL_TCPSTORE_BACKOFF_INITIAL_INTERVAL_DEFAULT;

extern int NCCL_TCPSTORE_BACKOFF_MAX_INTERVAL;
extern int NCCL_TCPSTORE_BACKOFF_MAX_INTERVAL_DEFAULT;

extern double NCCL_TCPSTORE_BACKOFF_MULTIPLIER;
extern double NCCL_TCPSTORE_BACKOFF_MULTIPLIER_DEFAULT;

extern double NCCL_TCPSTORE_BACKOFF_RANDOMIZATION_FACTOR;
extern double NCCL_TCPSTORE_BACKOFF_RANDOMIZATION_FACTOR_DEFAULT;

extern int NCCL_TCPSTORE_CONNECT_TIMEOUT;
extern int NCCL_TCPSTORE_CONNECT_TIMEOUT_DEFAULT;

extern int NCCL_TCPSTORE_IO_TIMEOUT;
extern int NCCL_TCPSTORE_IO_TIMEOUT_DEFAULT;

extern std::string NCCL_THREAD_THRESHOLDS;
extern std::string NCCL_THREAD_THRESHOLDS_DEFAULT;

extern std::string NCCL_TOPO_DUMP_FILE;
extern std::string NCCL_TOPO_DUMP_FILE_DEFAULT;

extern int64_t NCCL_TOPO_DUMP_FILE_RANK;
extern int64_t NCCL_TOPO_DUMP_FILE_RANK_DEFAULT;

extern std::string NCCL_TOPO_FILE;
extern std::string NCCL_TOPO_FILE_DEFAULT;

extern std::string NCCL_TOPO_FILE_PATH;
extern std::string NCCL_TOPO_FILE_PATH_DEFAULT;

extern int64_t NCCL_TRANSPORT_PREP_TRAINER_ITERATION_LIMIT;
extern int64_t NCCL_TRANSPORT_PREP_TRAINER_ITERATION_LIMIT_DEFAULT;

extern uint64_t NCCL_TRANSPORT_RECONNECT_OPCOUNT_LIMIT;
extern uint64_t NCCL_TRANSPORT_RECONNECT_OPCOUNT_LIMIT_DEFAULT;

extern std::string NCCL_TUNER_PLUGIN;
extern std::string NCCL_TUNER_PLUGIN_DEFAULT;

extern int64_t NCCL_UID_STAGGER_RATE;
extern int64_t NCCL_UID_STAGGER_RATE_DEFAULT;

extern int64_t NCCL_UID_STAGGER_THRESHOLD;
extern int64_t NCCL_UID_STAGGER_THRESHOLD_DEFAULT;

extern int64_t NCCL_UNPACK_DOUBLE_NCHANNELS;
extern int64_t NCCL_UNPACK_DOUBLE_NCHANNELS_DEFAULT;

extern bool NCCL_USE_MEM_CACHE;
extern bool NCCL_USE_MEM_CACHE_DEFAULT;

extern bool NCCL_USE_SHARED_BUFFER_POOL;
extern bool NCCL_USE_SHARED_BUFFER_POOL_DEFAULT;

extern bool NCCL_USE_TRANSPORT_EXT;
extern bool NCCL_USE_TRANSPORT_EXT_DEFAULT;

enum class NCCL_USE_TRANSPORT_PROXY {
  unset,
  none,
  comm,
  shared,
};
extern enum NCCL_USE_TRANSPORT_PROXY NCCL_USE_TRANSPORT_PROXY;
extern enum NCCL_USE_TRANSPORT_PROXY NCCL_USE_TRANSPORT_PROXY_DEFAULT;

extern int64_t NCCL_WARN_ENABLE_DEBUG_INFO;
extern int64_t NCCL_WARN_ENABLE_DEBUG_INFO_DEFAULT;

extern bool NCCL_WIN_ENABLE;
extern bool NCCL_WIN_ENABLE_DEFAULT;

extern int NCCL_WIN_STRIDE;
extern int NCCL_WIN_STRIDE_DEFAULT;

extern int64_t NCCL_WORK_ARGS_BYTES;
extern int64_t NCCL_WORK_ARGS_BYTES_DEFAULT;

extern int64_t NCCL_WORK_FIFO_BYTES;
extern int64_t NCCL_WORK_FIFO_BYTES_DEFAULT;

extern std::string __NCCL_UNIT_TEST_STRING_CVAR__;
extern std::string __NCCL_UNIT_TEST_STRING_CVAR___DEFAULT;

extern bool __NCCL_UNIT_TEST_BOOL_CVAR__;
extern bool __NCCL_UNIT_TEST_BOOL_CVAR___DEFAULT;

extern int __NCCL_UNIT_TEST_INT_CVAR__;
extern int __NCCL_UNIT_TEST_INT_CVAR___DEFAULT;

extern int64_t __NCCL_UNIT_TEST_INT64_T_CVAR__;
extern int64_t __NCCL_UNIT_TEST_INT64_T_CVAR___DEFAULT;

extern uint16_t __NCCL_UNIT_TEST_UINT16_T_CVAR__;
extern uint16_t __NCCL_UNIT_TEST_UINT16_T_CVAR___DEFAULT;

extern size_t __NCCL_UNIT_TEST_SIZE_T_CVAR__;
extern size_t __NCCL_UNIT_TEST_SIZE_T_CVAR___DEFAULT;

extern double __NCCL_UNIT_TEST_DOUBLE_CVAR__;
extern double __NCCL_UNIT_TEST_DOUBLE_CVAR___DEFAULT;

namespace ncclx {

extern std::unordered_map<std::string, std::string*> env_string_values;
extern std::unordered_map<std::string, int64_t*> env_int64_values;
extern std::unordered_map<std::string, int*> env_int_values;
extern std::unordered_map<std::string, bool*> env_bool_values;

}; // namespace ncclx
void ncclCvarInit();

#endif /* NCCL_CVARS_H_INCLUDED */
// Automatically generated by ./comms/utils/cvars/extractcvars.py --- END
