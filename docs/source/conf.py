#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (c) Meta Platforms, Inc. and affiliates.
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

#
# PyTorch documentation build configuration file, created by
# sphinx-quickstart on Fri Dec 23 13:31:47 2016.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
from importlib import metadata

sys.path.insert(0, os.path.abspath("."))
import pytorch_sphinx_theme2

import torch  # noqa: F401
import torchcomms  # noqa: F401

FBCODE = "fbcode" in os.getcwd()

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
needs_sphinx = "1.6"

user_agent = "Mozilla/5.0 (X11; Linux x86_64; rv:25.0) Gecko/20100101 Firefox/25.0 github.com/meta-pytorch/torchcomms"

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.doctest",
    "sphinx.ext.todo",
    "sphinx.ext.coverage",
    "sphinx.ext.napoleon",
    "sphinx.ext.viewcode",
    "sphinx.ext.autosectionlabel",
    "sphinx_design",
    "sphinx_sitemap",
    "sphinxcontrib.mermaid",
    "myst_parser",
]

myst_enable_extensions = [
    "colon_fence",
    "deflist",
    "html_image",
]
# Configure MyST parser to treat mermaid code blocks as mermaid directives
myst_fence_as_directive = ["mermaid"]

# coverage options

coverage_ignore_modules = []

# katex options
katex_options = r"""
delimiters : [
   {left: "$$", right: "$$", display: true},
   {left: "\\(", right: "\\)", display: false},
   {left: "\\[", right: "\\]", display: true}
]
"""

html_favicon = "_static/torchcomms-logo-favicon.png"

napoleon_use_ivar = True
theme_variables = pytorch_sphinx_theme2.get_theme_variables()
# Add any paths that contain templates here, relative to this directory.
templates_path = [
    "_templates",
    os.path.join(os.path.dirname(pytorch_sphinx_theme2.__file__), "templates"),
]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = [".rst", ".md"]

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "meta-pytorch/torchcomms"
copyright = "2025, torchcomms Contributors"
author = "torchcomms Contributors"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
if FBCODE:
    version = "main"
else:
    version = f"v{metadata.version('torchcomms')}"
# The full version, including alpha/beta/rc tags.
release = "main"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = [
    "examples_*/**/*.ipynb",
]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "pytorch_sphinx_theme2"
html_theme_path = [pytorch_sphinx_theme2.get_html_theme_path()]

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    "pytorch_project": "torchcomms",
    "collapse_navigation": False,
    "display_version": True,
    "show_lf_header": False,
    "show_lf_footer": False,
    "navigation_with_keys": False,
    "analytics_id": "GTM-NPLPKN5G",
    "logo": {
        "image_light": "_static/logo-light.png",
        "image_dark": "_static/logo-dark.png",
    },
    "icon_links": [
        {
            "name": "X",
            "url": "https://x.com/PyTorch",
            "icon": "fa-brands fa-x-twitter",
        },
        {
            "name": "GitHub",
            "url": "https://github.com/meta-pytorch/torchcomms",
            "icon": "fa-brands fa-github",
        },
        {
            "name": "Discourse",
            "url": "https://dev-discuss.pytorch.org/",
            "icon": "fa-brands fa-discourse",
        },
        # {
        #     "name": "PyPi",
        #     "url": "https://pypi.org/project/<your-project>/",
        #     "icon": "fa-brands fa-python",
        # },
    ],
    "use_edit_page_button": True,
    "navbar_center": "navbar-nav",
}

html_context = {
    "theme_variables": theme_variables,
    "display_github": True,
    "github_url": "https://github.com",
    "github_user": "pytorch",
    "github_repo": "meta-pytorch/torchcomms",
    "feedback_url": "https://github.com/meta-pytorch/torchcomms",
    "github_version": "main",
    "doc_path": "docs/source",
}

# html_logo = "_static/img/pytorch-logo-dark.svg"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]


html_css_files = ["custom.css"]
html_js_files = []

html_baseurl = "https://meta-pytorch.org/torchcomms"


def process_signature(app, what, name, obj, options, signature, return_annotation):
    # signature and return_annotation are strings or None
    if signature:
        signature = signature.replace("torchcomms._comms.", "torchcomms.")
    if return_annotation:
        return_annotation = return_annotation.replace(
            "torchcomms._comms.", "torchcomms."
        ).replace("torch::comms::", "torchcomms.")
    return (signature, return_annotation)


def setup(app):
    app.connect("autodoc-process-signature", process_signature)

    # NOTE: in Sphinx 1.8+ `html_css_files` is an official configuration value
    # and can be moved outside of this function (and the setup(app) function
    # can be deleted).

    # In Sphinx 1.8 it was renamed to `add_css_file`, 1.7 and prior it is
    # `add_stylesheet` (deprecated in 1.8).
    add_css = getattr(app, "add_css_file", getattr(app, "add_stylesheet", None))  # noqa B009
    for css_file in html_css_files:
        add_css(css_file)


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "torchcommsdoc"


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "torchcomms", "torchcomms Documentation", [author], 1)]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "torchcomms",
        "torchcomms Documentation",
        author,
        "Miscellaneous",
    )
]

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {
    "python": ("https://docs.python.org/", None),
    "numpy": ("https://docs.scipy.org/doc/numpy/", None),
    "torch": ("https://docs.pytorch.org/docs/stable/", None),
}


# -- Options for autosectionlabel

# add the document to avoid collisions for common titles
autosectionlabel_prefix_document = True
